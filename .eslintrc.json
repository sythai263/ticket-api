{
	"env": {
		"browser": true,
		"es2021": true
	},
	"extends": [
		"xo",
		"prettier",
		"plugin:@typescript-eslint/recommended-requiring-type-checking",
		"plugin:@typescript-eslint/recommended"
	],
	"parser": "@typescript-eslint/parser",
	"parserOptions": {
		"ecmaVersion": "latest",
		"sourceType": "module",
		"project": "./tsconfig.json"
	},
	"plugins": ["@typescript-eslint", "simple-import-sort", "import"],
	"rules": {
		"new-cap": "off",
		"no-void": "off",
		"max-params": "off",
		"no-useless-escape": "off",
		"indent": [
			"error",
			"tab",
			{ "SwitchCase": 1, "MemberExpression": 1, "ImportDeclaration": "first" }
		],
		"no-useless-constructor": "off",
		"no-case-declarations": "off",
		"simple-import-sort/imports": "error",
		"@typescript-eslint/camelcase": "off",
		"@typescript-eslint/no-unused-vars": "off",
		"@typescript-eslint/adjacent-overload-signatures": "error",
		"@typescript-eslint/array-type": "error",
		"@typescript-eslint/ban-types": "error",
		"@typescript-eslint/explicit-member-accessibility": [
			"off",
			{
				"overrides": {
					"constructors": "off"
				}
			}
		],
		"@typescript-eslint/indent": "off",
		"@typescript-eslint/consistent-type-definitions": "error",
		"@typescript-eslint/member-delimiter-style": [
			"error",
			{
				"multiline": {
					"delimiter": "semi",
					"requireLast": true
				},
				"singleline": {
					"delimiter": "semi",
					"requireLast": false
				}
			}
		],
		"@typescript-eslint/member-ordering": "off",
		"@typescript-eslint/no-angle-bracket-type-assertion": "off",
		"@typescript-eslint/no-empty-function": "off",
		"@typescript-eslint/no-empty-interface": "error",
		"@typescript-eslint/no-explicit-any": "off",
		"@typescript-eslint/no-inferrable-types": "error",
		"@typescript-eslint/no-misused-new": "error",
		"@typescript-eslint/no-namespace": "off",
		"@typescript-eslint/no-require-imports": "error",
		"@typescript-eslint/no-this-alias": "error",
		"@typescript-eslint/no-use-before-define": "error",
		"@typescript-eslint/no-use-before-declare": "off",
		"@typescript-eslint/no-var-requires": "error",
		"@typescript-eslint/prefer-for-of": "error",
		"@typescript-eslint/prefer-function-type": "error",
		"@typescript-eslint/prefer-namespace-keyword": "error",
		"@typescript-eslint/quotes": [
			"error",
			"single",
			{
				"avoidEscape": true
			}
		],
		"@typescript-eslint/semi": ["error", "always"],
		"@typescript-eslint/naming-convention": [
			"error",
			{
				"selector": "default",
				"format": ["camelCase", "PascalCase", "snake_case", "UPPER_CASE"]
			},
			{
				"selector": "variable",
				"format": ["camelCase", "UPPER_CASE", "PascalCase"]
			},
			{
				"selector": "interface",
				"format": ["PascalCase"]
			},
			{
				"selector": "typeLike",
				"format": ["PascalCase"]
			},
			{
				"selector": "memberLike",
				"modifiers": ["private"],
				"format": ["camelCase"],
				"leadingUnderscore": "allow"
			},
			{
				"selector": "variable",
				"types": ["boolean"],
				"format": ["PascalCase"],
				"prefix": ["is", "should", "has", "can", "did", "will"]
			}
		],
		"@typescript-eslint/type-annotation-spacing": "error",
		"@typescript-eslint/unified-signatures": "error",
		"no-restricted-imports": [
			"error",
			{
				"paths": [
					{
						"name": "rxjs/Rx",
						"message": "Please import directly from \"rxjs\" instead"
					}
				]
			}
		],

		// ORIGINAL tslint.json -> "interface-name": false,
		"@typescript-eslint/interface-name-prefix": "off",

		// ORIGINAL tslint.json -> "no-console": [true, "debug", "info", "time", "timeEnd", "trace"],
		"no-restricted-syntax": [
			"error",
			{
				"selector": "CallExpression[callee.object.name=\"console\"][callee.property.name=/^(debug|info|time|timeEnd|trace)$/]",
				"message": "Unexpected property on console object was called"
			}
		],

		"@typescript-eslint/no-non-null-assertion": "error",
		"object-curly-spacing": ["error", "always"],
		"no-multi-spaces": ["error"],
		"arrow-body-style": "error",
		"complexity": ["warn", 10],
		"constructor-super": "error",
		"curly": "error",
		"dot-notation": "error",
		"eol-last": "error",
		"eqeqeq": ["error", "smart"],
		"guard-for-in": "error",
		"id-match": "error",
		"import/no-default-export": "error",
		"import/no-deprecated": "warn",
		"import/no-internal-modules": "off",
		"import/order": "off",
		"max-classes-per-file": ["error", 5],
		"max-len": "off",
		"new-parens": "error",
		"no-bitwise": "error",
		"no-caller": "error",
		"no-cond-assign": "error",
		"no-console": [
			"error",
			{
				"allow": [
					"info",
					"dirxml",
					"warn",
					"error",
					"dir",
					"timeLog",
					"assert",
					"clear",
					"count",
					"countReset",
					"group",
					"groupCollapsed",
					"groupEnd",
					"table",
					"Console",
					"markTimeline",
					"profile",
					"profileEnd",
					"timeline",
					"timelineEnd",
					"timeStamp",
					"context"
				]
			}
		],
		"no-debugger": "error",
		"no-duplicate-case": "error",
		"no-duplicate-imports": "error",
		"no-empty": "error",
		"no-eval": "error",
		"no-extra-bind": "error",
		"no-fallthrough": "error",
		"no-invalid-this": "error",
		"no-irregular-whitespace": "error",
		"no-multiple-empty-lines": [
			"error",
			{
				"max": 1
			}
		],
		"no-new-func": "error",
		"no-new-wrappers": "error",
		"no-redeclare": "error",
		"no-return-await": "error",
		"no-sequences": "error",
		"no-sparse-arrays": "error",
		"no-template-curly-in-string": "error",
		"no-shadow": "off",
		"no-throw-literal": "error",
		"no-trailing-spaces": "error",
		"no-undef-init": "error",
		"no-unsafe-finally": "error",
		"no-unused-expressions": "error",
		"no-unused-labels": "error",
		"no-var": "error",
		"object-shorthand": "error",
		"prefer-const": "error",
		"prefer-object-spread": "error",
		"quote-props": ["error", "consistent-as-needed"],
		"radix": "error",
		"space-before-function-paren": [
			"error",
			{
				"anonymous": "never",
				"named": "never",
				"asyncArrow": "always"
			}
		],
		"use-isnan": "error",
		"valid-typeof": "off"
	}
}
